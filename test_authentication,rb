require './web_authentication_system'

auth_system = WebAuthenticationSystem::Authentication.new

# Register a new user
puts "Registering a new user..."
registration_data = auth_system.register_user('testuser@example.com', 'Secure@Password123')
puts "Registration successful! Data: #{registration_data}"

# Authenticate the user
puts "\nAuthenticating the user..."
begin
  token = auth_system.authenticate('testuser@example.com', 'Secure@Password123', nil)
  puts "Authentication successful! JWT Token: #{token}"
rescue WebAuthenticationSystem::AuthenticationError => e
  puts "Authentication failed: #{e.message}"
end

# Test with wrong password
puts "\nTesting failed authentication (wrong password)..."
begin
  auth_system.authenticate('testuser@example.com', 'WrongPassword123', nil)
rescue WebAuthenticationSystem::AuthenticationError => e
  puts "Failed authentication as expected: #{e.message}"
end

# Test password reset
puts "\nInitiating password reset..."
auth_system.initiate_password_reset('testuser@example.com')

# Test 2FA with invalid code
puts "\nTesting 2FA with invalid code..."
begin
  auth_system.authenticate('testuser@example.com', 'Secure@Password123', '123456')
rescue WebAuthenticationSystem::AuthenticationError => e
  puts "2FA failed as expected: #{e.message}"
end

# Test security event logging (triggering account lock)
puts "\nTesting account lock after multiple failed attempts..."
5.times do
  begin
    auth_system.authenticate('testuser@example.com', 'WrongPassword123', nil)
  rescue WebAuthenticationSystem::AuthenticationError
    puts "Attempt failed."
  end
end

begin
  auth_system.authenticate('testuser@example.com', 'Secure@Password123', nil)
rescue WebAuthenticationSystem::AuthenticationError => e
  puts "Account locked message: #{e.message}"
end
